Create the Salespeople table
CREATE TABLE Salespeople (
    SNUM INT PRIMARY KEY,
    SNAME VARCHAR(255),
    CITY VARCHAR(255),
    COMM DECIMAL(5,2)
);

-- Insert data into the Salespeople table
INSERT INTO Salespeople (SNUM, SNAME, CITY, COMM) VALUES
    (1001, 'Peel', 'London', 0.12),
    (1002, 'Serres', 'San Jose', 0.13),
    (1004, 'Motika', 'London', 0.11),
    (1007, 'Rifkin', 'Barcelona', 0.15),
    (1003, 'AxelRod', 'New York', 0.10),
    (1005, 'Fran', 'London', 0.26);

Create the Customers table
CREATE TABLE Customers (
    CNUM INT PRIMARY KEY,
    CNAME VARCHAR(255),
    CITY VARCHAR(255),
    RATING INT,
    SNUM INT,
    FOREIGN KEY (SNUM) REFERENCES Salespeople(SNUM)
);

-- Insert data into the Customers table
INSERT INTO Customers (CNUM, CNAME, CITY, RATING, SNUM) VALUES
    (2001, 'Hoffman', 'London', 100, 1001),
    (2002, 'Giovanni', 'Rome', 200, 1003),
    (2003, 'Liu', 'San Jose', 200, 1002),
    (2004, 'Grass', 'Berlin', 300, 1002),
    (2006, 'Clemens', 'London', 100, 1001),
    (2008, 'Cisneros', 'San Jose', 300, 1007),
    (2007, 'Pereira', 'Rome', 100, 1004);

-- Create the Orders table
CREATE TABLE Orders (
    ONUM INT PRIMARY KEY,
    AMT DECIMAL(10, 2),
    ODATE DATE,
    CNUM INT,
    SNUM INT,
    FOREIGN KEY (CNUM) REFERENCES Customers(CNUM),
    FOREIGN KEY (SNUM) REFERENCES Salespeople(SNUM)
);

-- Insert data into the Orders table
INSERT INTO Orders (ONUM, AMT, ODATE, CNUM, SNUM) VALUES
    (3001, 18.69, '1996-10-03', 2008, 1007),
    (3003, 767.19, '1996-10-03', 2001, 1001),
    (3002, 1900.10, '1996-10-03', 2007, 1004),
    (3005, 5160.45, '1996-10-03', 2003, 1002),
    (3006, 1098.16, '1996-10-03', 2008, 1007),
    (3009, 1713.23, '1996-10-04', 2002, 1003),
    (3007, 75.75, '1996-10-04', 2002, 1003),
    (3008, 4723.00, '1996-10-05', 2006, 1001),
    (3010, 1309.95, '1996-10-06', 2004, 1002),
    (3011, 9891.88, '1996-10-06', 2006, 1001);

1. List all the columns of the Salespeople table. 

mysql> show columns from salespeople;
+-------+--------------+------+-----+---------+-------+
| Field | Type         | Null | Key | Default | Extra |
+-------+--------------+------+-----+---------+-------+
| SNUM  | int          | NO   | PRI | NULL    |       |
| SNAME | varchar(255) | YES  |     | NULL    |       |
| CITY  | varchar(255) | YES  |     | NULL    |       |
| COMM  | decimal(5,2) | YES  |     | NULL    |       |
+-------+--------------+------+-----+---------+-------+

2. List all customers with a rating of 100. 
mysql> select sname,rating from salespeople join customers
    -> On salespeople.snum=customers.snum
    -> where rating=100;
+--------+--------+
| sname  | rating |
+--------+--------+
| Peel   |    100 |
| Peel   |    100 |
| Motika |    100 |
+--------+--------+
3 rows in set (0.00 sec)

3. Find all records in the Customer table with NULL values in the city column. 

mysql> select * from customers where city=null;
Empty set (0.00 sec)

4. Find the largest order taken by each salesperson on each date. 

mysql> select * from(select sname,amt,odate,rank() over(partition by sname,odate order by amt desc) as rn from salespeople as s join orders as c on s.snum=c.snum) as t where rn=1;
+---------+---------+------------+----+
| sname   | amt     | odate      | rn |
+---------+---------+------------+----+
| AxelRod | 1713.23 | 1996-10-04 |  1 |
| Motika  | 1900.10 | 1996-10-03 |  1 |
| Peel    |  767.19 | 1996-10-03 |  1 |
| Peel    | 4723.00 | 1996-10-05 |  1 |
| Peel    | 9891.88 | 1996-10-06 |  1 |
| Rifkin  | 1098.16 | 1996-10-03 |  1 |
| Serres  | 5160.45 | 1996-10-03 |  1 |
| Serres  | 1309.95 | 1996-10-06 |  1 |
+---------+---------+------------+----+
8 rows in set (0.00 sec)

5. Arrange the Orders table by descending customer number.

mysql> select * from orders
    -> order by cnum desc ;
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1996-10-03 | 2008 | 1007 |
| 3006 | 1098.16 | 1996-10-03 | 2008 | 1007 |
| 3002 | 1900.10 | 1996-10-03 | 2007 | 1004 |
| 3008 | 4723.00 | 1996-10-05 | 2006 | 1001 |
| 3011 | 9891.88 | 1996-10-06 | 2006 | 1001 |
| 3010 | 1309.95 | 1996-10-06 | 2004 | 1002 |
| 3005 | 5160.45 | 1996-10-03 | 2003 | 1002 |
| 3007 |   75.75 | 1996-10-04 | 2002 | 1003 |
| 3009 | 1713.23 | 1996-10-04 | 2002 | 1003 |
| 3003 |  767.19 | 1996-10-03 | 2001 | 1001 |
+------+---------+------------+------+------+
10 rows in set (0.00 sec)

6.. Find which salespeople currently have orders in the Orders table. 

mysql> select * from salespeople s join orders o on s.snum=o.snum;
+------+---------+-----------+------+------+---------+------------+------+------+
| SNUM | SNAME   | CITY      | COMM | ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+-----------+------+------+---------+------------+------+------+
| 1001 | Peel    | London    | 0.12 | 3003 |  767.19 | 1996-10-03 | 2001 | 1001 |
| 1001 | Peel    | London    | 0.12 | 3008 | 4723.00 | 1996-10-05 | 2006 | 1001 |
| 1001 | Peel    | London    | 0.12 | 3011 | 9891.88 | 1996-10-06 | 2006 | 1001 |
| 1002 | Serres  | San Jose  | 0.13 | 3005 | 5160.45 | 1996-10-03 | 2003 | 1002 |
| 1002 | Serres  | San Jose  | 0.13 | 3010 | 1309.95 | 1996-10-06 | 2004 | 1002 |
| 1003 | AxelRod | New York  | 0.10 | 3007 |   75.75 | 1996-10-04 | 2002 | 1003 |
| 1003 | AxelRod | New York  | 0.10 | 3009 | 1713.23 | 1996-10-04 | 2002 | 1003 |
| 1004 | Motika  | London    | 0.11 | 3002 | 1900.10 | 1996-10-03 | 2007 | 1004 |
| 1007 | Rifkin  | Barcelona | 0.15 | 3001 |   18.69 | 1996-10-03 | 2008 | 1007 |
| 1007 | Rifkin  | Barcelona | 0.15 | 3006 | 1098.16 | 1996-10-03 | 2008 | 1007 |
+------+---------+-----------+------+------+---------+------------+------+------+
10 rows in set (0.00 sec)

7.List names of all customers matched with the salespeople serving them. 

mysql> select s.snum,sname,cname from salespeople s join customers o on s.snum=o.snum;
+------+---------+----------+
| snum | sname   | cname    |
+------+---------+----------+
| 1001 | Peel    | Hoffman  |
| 1003 | AxelRod | Giovanni |
| 1002 | Serres  | Liu      |
| 1002 | Serres  | Grass    |
| 1001 | Peel    | Clemens  |
| 1004 | Motika  | pereira  |
| 1007 | Rifkin  | Cisneros |
+------+---------+----------+
7 rows in set (0.00 sec)

8. Find the names and numbers of all salespeople who had more than one customer.

mysql> select s.snum,sname,count(cname) s from salespeople s join customers c on s.snum=c.snum group by snum having count(*)>1;
+------+--------+---+
| snum | sname  | s |
+------+--------+---+
| 1001 | Peel   | 2 |
| 1002 | Serres | 2 |
+------+--------+---+
2 rows in set (0.00 sec)

9. Count the orders of each of the salespeople and output the results in descending order. 

mysql> select s.snum,sname,count(o.snum) orders_count from salespeople s join orders o on s.snum=o.snum group by snum order by orders_count desc;
+------+---------+--------------+
| snum | sname   | orders_count |
+------+---------+--------------+
| 1001 | Peel    |            3 |
| 1002 | Serres  |            2 |
| 1003 | AxelRod |            2 |
| 1007 | Rifkin  |            2 |
| 1004 | Motika  |            1 |
+------+---------+--------------+
5 rows in set (0.00 sec)

10. List the Customer table if and only if one or more of the customers in the Customer table are 
located in San Jose. 

mysql> select cname,city from customers where city='san jose';
+----------+----------+
| cname    | city     |
+----------+----------+
| Liu      | San Jose |
| Cisneros | San Jose |
+----------+----------+



11. Match salespeople to customers according to what city they lived in. 
mysql> select sname,cname,c.city from salespeople s join customers c on s.snum=c.snum;
+---------+----------+----------+
| sname   | cname    | city     |
+---------+----------+----------+
| Peel    | Hoffman  | London   |
| AxelRod | Giovanni | Rome     |
| Serres  | Liu      | San Jose |
| Serres  | Grass    | Berlin   |
| Peel    | Clemens  | London   |
| Motika  | pereira  | rome     |
| Rifkin  | Cisneros | San Jose |
+---------+----------+----------+
7 rows in set (0.00 sec)




12. Find the largest order taken by each salesperson.

mysql> select sname,max(amt) from salespeople s join orders o on s.snum=o.snum group by sname ;
+---------+----------+
| sname   | max(amt) |
+---------+----------+
| Rifkin  |  1098.16 |
| Motika  |  1900.10 |
| Peel    |  9891.88 |
| Serres  |  5160.45 |
| AxelRod |  1713.23 |
+---------+----------+
5 rows in set (0.00 sec)
 
13. Find customers in San Jose who have a rating above 200. 

mysql> select cname,rating from customers where rating>200;
+----------+--------+
| cname    | rating |
+----------+--------+
| Grass    |    300 |
| Cisneros |    300 |
+----------+--------+
2 rows in set (0.00 sec)

14. List the names and commissions of all salespeople in London. 

mysql> select sname,comm from salespeople where city='london';
+--------+------+
| sname  | comm |
+--------+------+
| Peel   | 0.12 |
| Motika | 0.11 |
| Fran   | 0.26 |
+--------+------+
3 rows in set (0.00 sec)

15. List all the orders of salesperson Motika from the Orders table.

mysql> select *,sname from orders o join salespeople s on s.snum=o.snum where sname='motika';
+------+---------+------------+------+------+------+--------+--------+------+--------+
| ONUM | AMT     | ODATE      | CNUM | SNUM | SNUM | SNAME  | CITY   | COMM | sname  |
+------+---------+------------+------+------+------+--------+--------+------+--------+
| 3002 | 1900.10 | 1996-10-03 | 2007 | 1004 | 1004 | Motika | London | 0.11 | Motika |
+------+---------+------------+------+------+------+--------+--------+------+--------+
1 row in set (0.00 sec) 
16. Find all customers with orders on October 3. 

mysql> select odate,cname from orders o join customers c on o.snum=c.snum where monthname(odate)='october' and day(odate)=3;
+------------+----------+
| odate      | cname    |
+------------+----------+
| 1996-10-03 | Hoffman  |
| 1996-10-03 | Liu      |
| 1996-10-03 | Grass    |
| 1996-10-03 | Clemens  |
| 1996-10-03 | pereira  |
| 1996-10-03 | Cisneros |
| 1996-10-03 | Cisneros |
+------------+----------+

17. Give the sums of the amounts from the Orders table, grouped by date, eliminating all those 
dates where the SUM was not at least 2000.00 above the MAX amount. 

mysql> select odate,sum(amt) as sum_amount from orders group by odate having sum_amount<=max(amt)+2000;
+------------+------------+
| odate      | sum_amount |
+------------+------------+
| 1996-10-04 |    1788.98 |
| 1996-10-05 |    4723.00 |
| 1996-10-06 |   11201.83 |
+------------+------------+
sele3 rows in set (0.01 sec)

18. Select all orders that had amounts that were greater than at least one of the orders from 
October 6. 

mysql> select * from orders where amt>(select min(amt) from orders where monthname(odate)='october' and day(odate)=6 group by odate);
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1996-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1996-10-03 | 2003 | 1002 |
| 3008 | 4723.00 | 1996-10-05 | 2006 | 1001 |
| 3009 | 1713.23 | 1996-10-04 | 2002 | 1003 |
| 3011 | 9891.88 | 1996-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+
5 rows in set (0.00 sec)
19. Write a query that uses the EXISTS operator to extract all salespeople who have customers 
with a rating of 300. 
mysql> select * from salespeople s where exists(select *,rating from customers c where s.snum=c.snum and rating=300);
+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1002 | Serres | San Jose  | 0.13 |
| 1007 | Rifkin | Barcelona | 0.15 |
+------+--------+-----------+------+
2 rows in set (0.00 sec)


20. Find all pairs of customers having the same rating. 
mysql> select * from customers a,customers b where a.rating=b.rating and a.cnum<b.cnum;
+------+----------+--------+--------+------+------+----------+----------+--------+------+
| CNUM | CNAME    | CITY   | RATING | SNUM | CNUM | CNAME    | CITY     | RATING | SNUM |
+------+----------+--------+--------+------+------+----------+----------+--------+------+
| 2001 | Hoffman  | London |    100 | 1001 | 2006 | Clemens  | London   |    100 | 1001 |
| 2001 | Hoffman  | London |    100 | 1001 | 2007 | pereira  | rome     |    100 | 1004 |
| 2002 | Giovanni | Rome   |    200 | 1003 | 2003 | Liu      | San Jose |    200 | 1002 |
| 2004 | Grass    | Berlin |    300 | 1002 | 2008 | Cisneros | San Jose |    300 | 1007 |
| 2006 | Clemens  | London |    100 | 1001 | 2007 | pereira  | rome     |    100 | 1004 |
+------+----------+--------+

21. Find all customers whose CNUM is 1000 above the SNUM of Serres. 
22. Give the salespeople’s commissions as percentages instead of decimal numbers. 

mysql> select *,concat(round(comm*100),'%') from salespeople ;
+------+---------+-----------+------+-----------------------------+
| SNUM | SNAME   | CITY      | COMM | concat(round(comm*100),'%') |
+------+---------+-----------+------+-----------------------------+
| 1001 | Peel    | London    | 0.12 | 12%                         |
| 1002 | Serres  | San Jose  | 0.13 | 13%                         |
| 1003 | AxelRod | New York  | 0.10 | 10%                         |
| 1004 | Motika  | London    | 0.11 | 11%                         |
| 1005 | Fran    | London    | 0.26 | 26%                         |
| 1007 | Rifkin  | Barcelona | 0.15 | 15%                         |
+------+---------+-----------+------+-----------------------------+
6 rows in set (0.00 sec)


23. Find the largest order taken by each salesperson on each date, eliminating those MAX orders 
which are less than $3000.00 in value. 



24. List the largest orders for October 3, for each salesperson. 
25. Find all customers located in cities where Serres (SNUM 1002) has customers. 

26. Select all customers with a rating above 200.00. 
mysql> select * from customers where rating>200;
+------+----------+----------+--------+------+
| CNUM | CNAME    | CITY     | RATING | SNUM |
+------+----------+----------+--------+------+
| 2004 | Grass    | Berlin   |    300 | 1002 |
| 2008 | Cisneros | San Jose |    300 | 1007 |
+------+----------+----------+--------+------+
2 rows in set (0.02 sec)

27. Count the number of salespeople currently listing orders in the Orders table. 

mysql> select count(distinct o.snum) as count_orders from salespeople s join orders o on s.snum=o.snum ;
+--------------+
| count_orders |
+--------------+
|            5 |
+--------------+
1 row in set (0.00 sec)

28. Write a query that produces all customers serviced by salespeople with a commission above 
12%. Output the customer’s name and the salesperson’s rate of commission. 
29. Find salespeople who have multiple customers. 

mysql> select sname,count(c.snum) as count_customers from salespeople s join customers c on s.snum=c.snum   group by sname having count_customers>1;
+--------+-----------------+
| sname  | count_customers |
+--------+-----------------+
| Peel   |               2 |
| Serres |               2 |
+--------+-----------------+
2 rows in set (0.00 sec)

30. Find salespeople with customers located in their city. 

mysql> select sname,cname,s.city from salespeople s join customers c on s.city=c.city;
+--------+----------+----------+
| sname  | cname    | city     |
+--------+----------+----------+
| Fran   | Hoffman  | London   |
| Motika | Hoffman  | London   |
| Peel   | Hoffman  | London   |
| Serres | Liu      | San Jose |
| Fran   | Clemens  | London   |
| Motika | Clemens  | London   |
| Peel   | Clemens  | London   |
| Serres | Cisneros | San Jose |
+--------+----------+----------+
8 rows in set (0.00 sec)

31. Find all salespeople whose name starts with ‘P’ and the fourth character is ‘l’.
mysql> select * from salespeople where sname like 'p__l%';
+------+-------+--------+------+
| SNUM | SNAME | CITY   | COMM |
+------+-------+--------+------+
| 1001 | Peel  | London | 0.12 |
+------+-------+--------+------+
1 row in set (0.00 sec)
 
32. Write a query that uses a subquery to obtain all orders for the customer named Cisneros. 
Assume you do not know his customer number.

mysql> select * from orders where snum=(select snum from customers where cname='cisneros');
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1996-10-03 | 2008 | 1007 |
| 3006 | 1098.16 | 1996-10-03 | 2008 | 1007 |
+------+---------+------------+------+------+
2 rows in set (0.00 sec)
 
33. Find the largest orders for Serres and Rifkin. 

mysql> select sname,max(amt) from salespeople s join orders o on s.snum=o.snum group by sname having sname = 'serres' or sname= 'rifkin';
+--------+----------+
| sname  | max(amt) |
+--------+----------+
| Rifkin |  1098.16 |
| Serres |  5160.45 |
+--------+----------+
2 rows in set (0.00 sec)
34. Extract the Salespeople table in the following order : SNUM, SNAME, COMMISSION, CITY. 

mysql> select snum,sname,comm as commission,city from salespeople;
+------+---------+------------+-----------+
| snum | sname   | commission | city      |
+------+---------+------------+-----------+
| 1001 | Peel    |       0.12 | London    |
| 1002 | Serres  |       0.13 | San Jose  |
| 1003 | AxelRod |       0.10 | New York  |
| 1004 | Motika  |       0.11 | London    |
| 1005 | Fran    |       0.26 | London    |
| 1007 | Rifkin  |       0.15 | Barcelona |
+------+---------+------------+-----------+
6 rows in set (0.00 sec)
35. Select all customers whose names fall in between ‘A’ and ‘G’ alphabetical range.

mysql> select cname from customers where cname between 'A' and 'G';
+----------+
| cname    |
+----------+
| Clemens  |
| Cisneros |
+----------+
2 rows in set (0.01 sec)
 
36. Select all the possible combinations of customers that you can assign. 
mysql> select * from customers c, customers d where c.cnum<d.cnum;
+------+----------+----------+--------+------+------+----------+----------+--------+------+
| CNUM | CNAME    | CITY     | RATING | SNUM | CNUM | CNAME    | CITY     | RATING | SNUM |
+------+----------+----------+--------+------+------+----------+----------+--------+------+
| 2001 | Hoffman  | London   |    100 | 1001 | 2002 | Giovanni | Rome     |    200 | 1003 |
| 2001 | Hoffman  | London   |    100 | 1001 | 2003 | Liu      | San Jose |    200 | 1002 |
| 2001 | Hoffman  | London   |    100 | 1001 | 2004 | Grass    | Berlin   |    300 | 1002 |
| 2001 | Hoffman  | London   |    100 | 1001 | 2006 | Clemens  | London   |    100 | 1001 |
| 2001 | Hoffman  | London   |    100 | 1001 | 2007 | pereira  | rome     |    100 | 1004 |
| 2001 | Hoffman  | London   |    100 | 1001 | 2008 | Cisneros | San Jose |    300 | 1007 |
| 2002 | Giovanni | Rome     |    200 | 1003 | 2003 | Liu      | San Jose |    200 | 1002 |
| 2002 | Giovanni | Rome     |    200 | 1003 | 2004 | Grass    | Berlin   |    300 | 1002 |
| 2002 | Giovanni | Rome     |    200 | 1003 | 2006 | Clemens  | London   |    100 | 1001 |
| 2002 | Giovanni | Rome     |    200 | 1003 | 2007 | pereira  | rome     |    100 | 1004 |
| 2002 | Giovanni | Rome     |    200 | 1003 | 2008 | Cisneros | San Jose |    300 | 1007 |
| 2003 | Liu      | San Jose |    200 | 1002 | 2004 | Grass    | Berlin   |    300 | 1002 |
| 2003 | Liu      | San Jose |    200 | 1002 | 2006 | Clemens  | London   |    100 | 1001 |
| 2003 | Liu      | San Jose |    200 | 1002 | 2007 | pereira  | rome     |    100 | 1004 |
| 2003 | Liu      | San Jose |    200 | 1002 | 2008 | Cisneros | San Jose |    300 | 1007 |
| 2004 | Grass    | Berlin   |    300 | 1002 | 2006 | Clemens  | London   |    100 | 1001 |
| 2004 | Grass    | Berlin   |    300 | 1002 | 2007 | pereira  | rome     |    100 | 1004 |
| 2004 | Grass    | Berlin   |    300 | 1002 | 2008 | Cisneros | San Jose |    300 | 1007 |
| 2006 | Clemens  | London   |    100 | 1001 | 2007 | pereira  | rome     |    100 | 1004 |
| 2006 | Clemens  | London   |    100 | 1001 | 2008 | Cisneros | San Jose |    300 | 1007 |
| 2007 | pereira  | rome     |    100 | 1004 | 2008 | Cisneros | San Jose |    300 | 1007 |
+------+----------+----------+--------+------+------+----------+----------+--------+------+
21 rows in set (0.01 sec)

37. Select all orders that are greater than the average for October 4. 

mysql> select * from  orders where amt>(select amt from (select odate,avg(amt)amt from orders group by odate having monthname(odate)='october' and day(odate)=4)as t);
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1996-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1996-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1996-10-03 | 2008 | 1007 |
| 3008 | 4723.00 | 1996-10-05 | 2006 | 1001 |
| 3009 | 1713.23 | 1996-10-04 | 2002 | 1003 |
| 3010 | 1309.95 | 1996-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1996-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+
7 rows in set (0.01 sec)

38. Write a select command using a corelated subquery that selects the names and numbers of all 
customers with ratings equal to the maximum for their city.

mysql> select cname,cnum from customers c1 where rating=(select max(c2.rating) from customers c2 where c1.city=c2.city);
+----------+------+
| cname    | cnum |
+----------+------+
| Hoffman  | 2001 |
| Giovanni | 2002 |
| Grass    | 2004 |
| Clemens  | 2006 |
| Cisneros | 2008 |
+----------+------+
5 rows in set (0.00 sec)
 
39. Write a query that totals the orders for each day and places the results in descending order. 

mysql> select odate,sum(amt) amt from orders group by odate order by amt desc;
+------------+----------+
| odate      | amt      |
+------------+----------+
| 1996-10-06 | 11201.83 |
| 1996-10-03 |  8944.59 |
| 1996-10-05 |  4723.00 |
| 1996-10-04 |  1788.98 |
+------------+----------+
4 rows in set (0.00 sec)

40. Write a select command that produces the rating followed by the name of each customer in
San Jose.

mysql> select cname,rating,city from customers where city='san j
ose';
+----------+--------+----------+
| cname    | rating | city     |
+----------+--------+----------+
| Liu      |    200 | San Jose |
| Cisneros |    300 | San Jose |
+----------+--------+----------+
2 rows in set (0.00 sec)

41. Find all orders with amounts smaller than any amount for a customer in San Jose. 
mysql> select * from orders where amt<any(select amt from orders o join customers c on o.cnum=c.cnum where city='san jose');
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1996-10-03 | 2008 | 1007 |
| 3002 | 1900.10 | 1996-10-03 | 2007 | 1004 |
| 3003 |  767.19 | 1996-10-03 | 2001 | 1001 |
| 3006 | 1098.16 | 1996-10-03 | 2008 | 1007 |
| 3007 |   75.75 | 1996-10-04 | 2002 | 1003 |
| 3008 | 4723.00 | 1996-10-05 | 2006 | 1001 |
| 3009 | 1713.23 | 1996-10-04 | 2002 | 1003 |
| 3010 | 1309.95 | 1996-10-06 | 2004 | 1002 |
+------+---------+------------+------+------+
8 rows in set (0.00 sec)
42. Find all orders with above average amounts for their customers. 


43. Write a query that selects the highest rating in each city.
 mysql> select city,max(rating)from customers group by city;
+----------+-------------+
| city     | max(rating) |
+----------+-------------+
| London   |         100 |
| Rome     |         200 |
| San Jose |         300 |
| Berlin   |         300 |
+----------+-------------+
4 rows in set (0.01 sec)
 
44. Write a query that calculates the amount of the salesperson’s commission on each order by a 
customer with a rating above 100.00. 
45. Count the customers with ratings above San Jose’s average. 
46. Write a query that produces all pairs of salespeople with themselves as well as duplicate rows 
with the order reversed. 

mysql> select * from salespeople s,salespeople c order by s.snum,c.snum;
+------+---------+-----------+------+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM | SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+------+---------+-----------+------+
| 1001 | Peel    | London    | 0.12 | 1001 | Peel    | London    | 0.12 |
| 1001 | Peel    | London    | 0.12 | 1002 | Serres  | San Jose  | 0.13 |
| 1001 | Peel    | London    | 0.12 | 1003 | AxelRod | New York  | 0.10 |
| 1001 | Peel    | London    | 0.12 | 1004 | Motika  | London    | 0.11 |
| 1001 | Peel    | London    | 0.12 | 1005 | Fran    | London    | 0.26 |
| 1001 | Peel    | London    | 0.12 | 1007 | Rifkin  | Barcelona | 0.15 |
| 1002 | Serres  | San Jose  | 0.13 | 1001 | Peel    | London    | 0.12 |
| 1002 | Serres  | San Jose  | 0.13 | 1002 | Serres  | San Jose  | 0.13 |
| 1002 | Serres  | San Jose  | 0.13 | 1003 | AxelRod | New York  | 0.10 |
| 1002 | Serres  | San Jose  | 0.13 | 1004 | Motika  | London    | 0.11 |
| 1002 | Serres  | San Jose  | 0.13 | 1005 | Fran    | London    | 0.26 |
| 1002 | Serres  | San Jose  | 0.13 | 1007 | Rifkin  | Barcelona | 0.15 |
| 1003 | AxelRod | New York  | 0.10 | 1001 | Peel    | London    | 0.12 |
| 1003 | AxelRod | New York  | 0.10 | 1002 | Serres  | San Jose  | 0.13 |
| 1003 | AxelRod | New York  | 0.10 | 1003 | AxelRod | New York  | 0.10 |
| 1003 | AxelRod | New York  | 0.10 | 1004 | Motika  | London    | 0.11 |
| 1003 | AxelRod | New York  | 0.10 | 1005 | Fran    | London    | 0.26 |
| 1003 | AxelRod | New York  | 0.10 | 1007 | Rifkin  | Barcelona | 0.15 |
| 1004 | Motika  | London    | 0.11 | 1001 | Peel    | London    | 0.12 |
| 1004 | Motika  | London    | 0.11 | 1002 | Serres  | San Jose  | 0.13 |
| 1004 | Motika  | London    | 0.11 | 1003 | AxelRod | New York  | 0.10 |
| 1004 | Motika  | London    | 0.11 | 1004 | Motika  | London    | 0.11 |
| 1004 | Motika  | London    | 0.11 | 1005 | Fran    | London    | 0.26 |
| 1004 | Motika  | London    | 0.11 | 1007 | Rifkin  | Barcelona | 0.15 |
| 1005 | Fran    | London    | 0.26 | 1001 | Peel    | London    | 0.12 |
| 1005 | Fran    | London    | 0.26 | 1002 | Serres  | San Jose  | 0.13 |
| 1005 | Fran    | London    | 0.26 | 1003 | AxelRod | New York  | 0.10 |
| 1005 | Fran    | London    | 0.26 | 1004 | Motika  | London    | 0.11 |
| 1005 | Fran    | London    | 0.26 | 1005 | Fran    | London    | 0.26 |
| 1005 | Fran    | London    | 0.26 | 1007 | Rifkin  | Barcelona | 0.15 |
| 1007 | Rifkin  | Barcelona | 0.15 | 1001 | Peel    | London    | 0.12 |
| 1007 | Rifkin  | Barcelona | 0.15 | 1002 | Serres  | San Jose  | 0.13 |
| 1007 | Rifkin  | Barcelona | 0.15 | 1003 | AxelRod | New York  | 0.10 |
| 1007 | Rifkin  | Barcelona | 0.15 | 1004 | Motika  | London    | 0.11 |
| 1007 | Rifkin  | Barcelona | 0.15 | 1005 | Fran    | London    | 0.26 |
| 1007 | Rifkin  | Barcelona | 0.15 | 1007 | Rifkin  | Barcelona | 0.15 |
+------+---------+-----------+------+------+---------+-----------+------+
36 rows in set (0.00 sec)
47. Find all salespeople that are located in either Barcelona or London. 

mysql> select * from salespeople where city ='barcelona' or city= 'london';
+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1001 | Peel   | London    | 0.12 |
| 1004 | Motika | London    | 0.11 |
| 1005 | Fran   | London    | 0.26 |
| 1007 | Rifkin | Barcelona | 0.15 |
+------+--------+-----------+------+
4 rows in set (0.00 sec)

48. Find all salespeople with only one customer. 
mysql> select sname,count(cnum) d from salespeople s join customers c on s.snum=c.snum group by sname having d=1  ;
+---------+---+
| sname   | d |
+---------+---+
| AxelRod | 1 |
| Motika  | 1 |
| Rifkin  | 1 |
+---------+---+
3 rows in set (0.00 sec)

49. Write a query that joins the Customer table to itself to find all pairs of customers served by a 
single salesperson. 
50. Write a query that will give you all orders for more than $1000.00 

mysql> select * from orders where amt>1000;
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1996-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1996-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1996-10-03 | 2008 | 1007 |
| 3008 | 4723.00 | 1996-10-05 | 2006 | 1001 |
| 3009 | 1713.23 | 1996-10-04 | 2002 | 1003 |
| 3010 | 1309.95 | 1996-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1996-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+
7 rows in set (0.00 sec)
51. Write a query that lists each order number followed by the name of the customer who made 
that order. 

mysql> select onum,cname from orders o join customers c on o.cnum=c.cnum ;
+------+----------+
| onum | cname    |
+------+----------+
| 3003 | Hoffman  |
| 3007 | Giovanni |
| 3009 | Giovanni |
| 3005 | Liu      |
| 3010 | Grass    |
| 3008 | Clemens  |
| 3011 | Clemens  |
| 3002 | pereira  |
| 3001 | Cisneros |
| 3006 | Cisneros |
+------+----------+
10 rows in set (0.01 sec)

52. Write 2 queries that select all salespeople (by name and number) who have customers in their 
cities who they do not service, one using a join and one a corelated subquery. Which solution 
is more elegant? 
53. Write a query that selects all customers whose ratings are equal to or greater than ANY (in the 
SQL sense) of Serres’? 
54. Write 2 queries that will produce all orders taken on October 3 or October 4. 
55. Write a query that produces all pairs of orders by a given customer. Name that customer and 
eliminate duplicates. 
56. Find only those customers whose ratings are higher than every customer in Rome. 
57. Write a query on the Customers table whose output will exclude all customers with a rating <= 
100.00, unless they are located in Rome. 
58. Find all rows from the Customers table for which the salesperson number is 1001. 

mysql> select * from customers where snum=1001;
+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Clemens | London |    100 | 1001 |
+------+---------+--------+--------+------+
2 rows in set (0.00 sec)

59. Find the total amount in Orders for each salesperson for whom this total is greater than the 
amount of the largest order in the table. 

60. Write a query that selects all orders save those with zeroes or NULLs in the amount field. 
61. Produce all combinations of salespeople and customer names such that the former precedes 
the latter alphabetically, and the latter has a rating of less than 200. 

mysql> select sname,cname from salespeople,customers
    -> where sname<cname and rating<200;
+---------+---------+
| sname   | cname   |
+---------+---------+
| Peel    | pereira |
| AxelRod | pereira |
| AxelRod | Clemens |
| AxelRod | Hoffman |
| Motika  | pereira |
| Fran    | pereira |
| Fran    | Hoffman |
+---------+---------+
7 rows in set (0.01 sec)

62. List all Salespeople’s names and the Commission they have earned. 

mysql> select sname,case when sum(comm*amt) is null then 0
    -> else sum(comm*amt) end total_earning
    -> from orders o left join salespeople s
    -> on o.snum=s.snum
    -> group by sname;
+---------+---------------+
| sname   | total_earning |
+---------+---------------+
| Rifkin  |      167.5275 |
| Motika  |      209.0110 |
| Peel    |     1845.8484 |
| Serres  |      841.1520 |
| AxelRod |      178.8980 |
+---------+---------------+
5 rows in set (0.01 sec)

63. Write a query that produces the names and cities of all customers with the same rating as 
Hoffman. Write the query using Hoffman’s CNUM rather than his rating, so that it would still be 
usable if his rating changed.

mysql> select cname,city from customers where rating= (select rating from customers where cnum=2001);
+---------+--------+
| cname   | city   |
+---------+--------+
| Hoffman | London |
| Clemens | London |
| pereira | rome   |
+---------+--------+
3 rows in set (0.00 sec)
 
64. Find all salespeople for whom there are customers that follow them in alphabetical order. 

mysql> select sname,cname from salespeople s join customers c
    -> on s.snum=c.snum
    -> order by cname;
+---------+----------+
| sname   | cname    |
+---------+----------+
| Rifkin  | Cisneros |
| Peel    | Clemens  |
| AxelRod | Giovanni |
| Serres  | Grass    |
| Peel    | Hoffman  |
| Serres  | Liu      |
| Motika  | pereira  |
+---------+----------+
7 rows in set (0.01 sec)

mysql> select sname,cname from salespeople s join customers c
    -> on s.snum=c.snum
    -> where sname<cname;
+---------+----------+
| sname   | cname    |
+---------+----------+
| AxelRod | Giovanni |
| Motika  | pereira  |
+---------+----------+
65. Write a query that produces the names and ratings of all customers of all who have above 
average orders. 

mysql> select cname,rating,amt from customers c join orders o on c.cnum=o.cnum where amt>(select avg(amt) from orders);
+---------+--------+---------+
| cname   | rating | amt     |
+---------+--------+---------+
| Liu     |    200 | 5160.45 |
| Clemens |    100 | 4723.00 |
| Clemens |    100 | 9891.88 |
+---------+--------+---------+
3 rows in set (0.00 sec)

66. Find the SUM of all purchases from the Orders table. 
mysql> select sum(amt) sum from orders;
+----------+
| sum      |
+----------+
| 26658.40 |
+----------+
1 row in set (0.00 sec)

67. Write a SELECT command that produces the order number, amount and date for all rows in 
the order table. 

mysql> select onum,amt,odate from orders;
+------+---------+------------+
| onum | amt     | odate      |
+------+---------+------------+
| 3001 |   18.69 | 1996-10-03 |
| 3002 | 1900.10 | 1996-10-03 |
| 3003 |  767.19 | 1996-10-03 |
| 3005 | 5160.45 | 1996-10-03 |
| 3006 | 1098.16 | 1996-10-03 |
| 3007 |   75.75 | 1996-10-04 |
| 3008 | 4723.00 | 1996-10-05 |
| 3009 | 1713.23 | 1996-10-04 |
| 3010 | 1309.95 | 1996-10-06 |
| 3011 | 9891.88 | 1996-10-06 |
+------+---------+------------+
10 rows in set (0.00 sec)

68. Count the number of nonNULL rating fields in the Customers table (including repeats). 

mysql> select count(rating) from customers where rating is not null;
+---------------+
| count(rating) |
+---------------+
|             7 |
+---------------+
1 row in set (0.00 sec)

69. Write a query that gives the names of both the salesperson and the customer for each order 
after the order number. 

mysql> select onum,sname,cname from orders o join salespeople s join customers c on s.snum=c.snum and c.cnum=o.cnum;
+------+---------+----------+
| onum | sname   | cname    |
+------+---------+----------+
| 3003 | Peel    | Hoffman  |
| 3007 | AxelRod | Giovanni |
| 3009 | AxelRod | Giovanni |
| 3005 | Serres  | Liu      |
| 3010 | Serres  | Grass    |
| 3008 | Peel    | Clemens  |
| 3011 | Peel    | Clemens  |
| 3002 | Motika  | pereira  |
| 3001 | Rifkin  | Cisneros |
| 3006 | Rifkin  | Cisneros |
+------+---------+----------+
10 rows in set (0.00 sec)

70. List the commissions of all salespeople servicing customers in London.

mysql> select sname,case when sum(comm*amt) is null then 0 else sum(comm*amt) end total_comm from salespeople s join orders o on s.snum=o.snum where city ='london' group by sname;
+--------+------------+
| sname  | total_comm |
+--------+------------+
| Peel   |  1845.8484 |
| Motika |   209.0110 |
+--------+------------+
2 rows in set (0.00 sec) 
71. Write a query using ANY or ALL that will find all salespeople who have no customers located in 
their city. 
72. Write a query using the EXISTS operator that selects all salespeople with customers located in 
their cities who are not assigned to them. 
73. Write a query that selects all customers serviced by Peel or Motika. (Hint : The SNUM field 
relates the two tables to one another.) 
74. Count the number of salespeople registering orders for each day. (If a salesperson has more 
than one order on a given day, he or she should be counted only once.) 
75. Find all orders attributed to salespeople in London. 
76. Find all orders by customers not located in the same cities as their salespeople. 
77. Find all salespeople who have customers with more than one current order. 
78. Write a query that extracts from the Customers table every customer assigned to a 
salesperson who currently has at least one other customer (besides the customer being 
selected) with orders in the Orders table. 
79. Write a query that selects all customers whose names begin with ‘C’. 
80. Write a query on the Customers table that will find the highest rating in each city. Put the output 
in this form : for the city (city) the highest rating is : (rating). 
81. Write a query that will produce the SNUM values of all salespeople with orders currently in the 
Orders table (without any repeats). 
82. Write a query that lists customers in descending order of rating. Output the rating field first, 
followed by the customer’s names and numbers. 
83. Find the average commission for salespeople in London. 
84. Find all orders credited to the same salesperson who services Hoffman (CNUM 2001). 
85. Find all salespeople whose commission is in between 0.10 and 0.12 (both inclusive). 
ACTS, Pune 
 Page 5 of 14 
86. Write a query that will give you the names and cities of all salespeople in London with a 
commission above 0.10. 
87. What will be the output from the following query? 
 SELECT * FROM ORDERS 
 where (amt < 1000 OR NOT (odate = 10/03/1996 AND cnum > 
2003)); 
88. Write a query that selects each customer’s smallest order. 
89. Write a query that selects the first customer in alphabetical order whose name begins with G. 
90. Write a query that counts the number of different nonNULL city values in the Customers table. 
91. Find the average amount from the Orders table. 
92. What would be the output from the following query? 
 SELECT * FROM ORDERS 
 WHERE NOT (odate = 10/03/96 OR snum > 1006) AND amt >= 
1500); 
93. Find all customers who are not located in San Jose and whose rating is above 200. 
94. Give a simpler way to write this query : 
 SELECT snum, sname city, comm FROM salespeople 
 WHERE (comm > + 0.12 OR comm < 0.14); 
95. Evaluate the following query : 
 SELECT * FROM orders 
 WHERE NOT ((odate = 10/03/96 AND snum > 1002) OR amt > 2000.00); 
96. Which salespersons attend to customers not in the city they have been assigned to? 
97. Which salespeople get commission greater than 0.11 are serving customers rated less than 
250? 
98. Which salespeople have been assigned to the same city but get different commission 
percentages? 
99. Which salesperson has earned the most by way of commission? 
100.Does the customer who has placed the maximum number of orders have the maximum rating? 
101.Has the customer who has spent the largest amount of money been given the highest rating? 
102.List all customers in descending order of customer rating. 
103.On which days has Hoffman placed orders? 
104.Do all salespeople have different commissions? 
105.Which salespeople have no orders between 10/03/1996 and 10/05/1996? 
106.How many salespersons have succeeded in getting orders? 
107.How many customers have placed orders? 
108.On which date has each salesperson booked an order of maximum value? 
109.Who is the most successful salesperson? 
110.Who is the worst customer with respect to the company? 
111.Are all customers not having placed orders greater than 200 totally been serviced by 
salespersons Peel or Serres? 
112.Which customers have the same rating? 
ACTS, Pune 
 Page 6 of 14 
113.Find all orders greater than the average for October 4th. 
114.Which customers have above average orders? 
115.List all customers with ratings above San Jose’s average. 
116.Select the total amount in orders for each salesperson for whom the total is greater than the 
amount of the largest order in the table. 
117.Give names and numbers of all salespersons who have more than one customer. 
118.Select all salespersons by name and number who have customers in their city whom they 
don’t service. 
119.Which customers’ rating should be lowered? 
120.Is there a case for assigning a salesperson to Berlin? 
121.Is there any evidence linking the performance of a salesperson to the commission that he or 
she is being paid? 
122.Does the total amount in orders by customer in Rome and London exceed the commission 
paid to salespersons in London and New York by more than 5 times? 
123.Which is the date, order number, amt and city for each salesperson (by name) for the 
maximum order he has obtained? 
124.Which salesperson(s) should be fired? 
125.What is the total income for the company? 











 


